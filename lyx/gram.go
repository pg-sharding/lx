// Code generated by goyacc -o lyx/gram.go -p yy lyx/gram.y. DO NOT EDIT.

//line lyx/gram.y:3
package lyx

import __yyfmt__ "fmt"

//line lyx/gram.y:3

import (
	"crypto/rand"
	"encoding/hex"
)

func randomHex(n int) (string, error) {
	bytes := make([]byte, n)
	if _, err := rand.Read(bytes); err != nil {
		return "", err
	}
	return hex.EncodeToString(bytes), nil
}

type LyxParser yyParser

func NewLyxParser() LyxParser {
	return yyNewParser()
}

//line lyx/gram.y:29
type yySymType struct {
	yys     int
	str     string
	strlist []string
	byte    byte
	bytes   []byte
	int     int
	bool    bool
	empty   struct{}

	node      Node
	from_list []FromClauseNode
	from      FromClauseNode
	tableelt  []TableElt
	tableref  FromClauseNode

	selectStmt *Select

	nodeList []Node
}

const SCONST = 57346
const IDENT = 57347
const CREATE = 57348
const ALTER = 57349
const ROLE = 57350
const DATABASE = 57351
const NATURAL = 57352
const TABLE = 57353
const INDEX = 57354
const SELECT = 57355
const UPDATE = 57356
const INSERT = 57357
const DELETE = 57358
const FROM = 57359
const WHERE = 57360
const AND = 57361
const VALUES = 57362
const OR = 57363
const EXPLAIN = 57364
const EXECUTE = 57365
const PREPARE = 57366
const BEGIN = 57367
const COMMIT = 57368
const ROLLBACK = 57369
const VACUUM = 57370
const CLUSTER = 57371
const ANALYZE = 57372
const INTO = 57373
const OUTER_P = 57374
const FULL = 57375
const RIGHT = 57376
const LEFT = 57377
const INNER_P = 57378
const DROP = 57379
const TRUNCATE = 57380
const FETCH = 57381
const FOR = 57382
const ORDER = 57383
const GROUP = 57384
const BY = 57385
const OFFSET = 57386
const LIMIT = 57387
const WINDOW = 57388
const CROSS = 57389
const SET = 57390
const RESET = 57391
const LOCAL = 57392
const ALL = 57393
const PRIMARY = 57394
const KEY = 57395
const FOREIGN = 57396
const REFERENCES = 57397
const USING = 57398
const TCOLON = 57399
const TCOMMA = 57400
const TOPENBR = 57401
const TCLOSEBR = 57402
const TSQOPENBR = 57403
const TSQCLOSEBR = 57404
const TSEMICOLON = 57405
const TNOT_EQUALS = 57406
const TDOT = 57407
const NULL_P = 57408
const ISNULL = 57409
const ON = 57410
const JOIN = 57411
const TPLUS = 57412
const TMINUS = 57413
const TMUL = 57414
const TDIV = 57415
const TGREATER = 57416
const TGREATER_EQUALS = 57417
const TLESS = 57418
const TLESS_EQUALS = 57419
const TMOD = 57420
const TPOW = 57421
const DELIMITERS = 57422
const PROGRAM = 57423
const STDIN = 57424
const FALSE_P = 57425
const TRUE_P = 57426
const copy_generic_opt_list = 57427
const BINARY = 57428
const FREEZE = 57429
const DELIMITER = 57430
const CSV = 57431
const HEADER_P = 57432
const QUOTE = 57433
const ESCAPE = 57434
const FORCE = 57435
const ENCODING = 57436
const TEQ = 57437
const OP = 57438
const ONLY = 57439
const RETURNING = 57440
const COPY = 57441
const ARRAY = 57442
const ROW = 57443
const SETOF = 57444
const INT_P = 57445
const INTEGER = 57446
const SMALLINT = 57447
const BIGINT = 57448
const REAL = 57449
const FLOAT_P = 57450
const DOUBLE_P = 57451
const DECIMAL_P = 57452
const DEC = 57453
const NUMERIC = 57454
const BOOLEAN_P = 57455
const BIT = 57456
const YEAR_P = 57457
const MONTH_P = 57458
const DAY_P = 57459
const HOUR_P = 57460
const MINUTE_P = 57461
const SECOND_P = 57462
const CHARACTER = 57463
const CHAR_P = 57464
const VARCHAR = 57465
const NATIONAL = 57466
const NCHAR = 57467
const PRECISION = 57468
const VARYING = 57469
const TIMESTAMP = 57470
const TIME = 57471
const INTERVAL = 57472
const WITHOUT = 57473
const ZONE = 57474
const IS = 57475
const NOT = 57476
const NULL = 57477
const DISTINCT = 57478
const DEFAULT = 57479
const NORMALIZED = 57480
const NOTNULL = 57481
const DOCUMENT_P = 57482
const ASYMMETRIC = 57483
const ASC = 57484
const DESC = 57485
const NULLS_LA = 57486
const FIRST_P = 57487
const LAST_P = 57488
const TO = 57489
const STDOUT = 57490
const LATERAL_P = 57491
const ORDINALITY = 57492
const WITH_LA = 57493
const COLLATE = 57494
const AS = 57495
const UNION = 57496
const EXCEPT = 57497
const INTERSECT = 57498
const BETWEEN = 57499
const IN_P = 57500
const LIKE = 57501
const ILIKE = 57502
const SIMILAR = 57503
const NOT_LA = 57504
const UNBOUNDED = 57505
const PARTITION = 57506
const RANGE = 57507
const ROWS = 57508
const GROUPS = 57509
const PRECEDING = 57510
const FOLLOWING = 57511
const CUBE = 57512
const ROLLUP = 57513
const Op = 57514
const OPERATOR = 57515
const AT = 57516
const UMINUS = 57517
const TYPECAST = 57518

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"SCONST",
	"IDENT",
	"CREATE",
	"ALTER",
	"ROLE",
	"DATABASE",
	"NATURAL",
	"TABLE",
	"INDEX",
	"SELECT",
	"UPDATE",
	"INSERT",
	"DELETE",
	"FROM",
	"WHERE",
	"AND",
	"VALUES",
	"OR",
	"EXPLAIN",
	"EXECUTE",
	"PREPARE",
	"BEGIN",
	"COMMIT",
	"ROLLBACK",
	"VACUUM",
	"CLUSTER",
	"ANALYZE",
	"INTO",
	"OUTER_P",
	"FULL",
	"RIGHT",
	"LEFT",
	"INNER_P",
	"DROP",
	"TRUNCATE",
	"FETCH",
	"FOR",
	"ORDER",
	"GROUP",
	"BY",
	"OFFSET",
	"LIMIT",
	"WINDOW",
	"CROSS",
	"SET",
	"RESET",
	"LOCAL",
	"ALL",
	"PRIMARY",
	"KEY",
	"FOREIGN",
	"REFERENCES",
	"USING",
	"TCOLON",
	"TCOMMA",
	"TOPENBR",
	"TCLOSEBR",
	"TSQOPENBR",
	"TSQCLOSEBR",
	"TSEMICOLON",
	"TNOT_EQUALS",
	"TDOT",
	"NULL_P",
	"ISNULL",
	"ON",
	"JOIN",
	"TPLUS",
	"TMINUS",
	"TMUL",
	"TDIV",
	"TGREATER",
	"TGREATER_EQUALS",
	"TLESS",
	"TLESS_EQUALS",
	"TMOD",
	"TPOW",
	"DELIMITERS",
	"PROGRAM",
	"STDIN",
	"FALSE_P",
	"TRUE_P",
	"copy_generic_opt_list",
	"BINARY",
	"FREEZE",
	"DELIMITER",
	"CSV",
	"HEADER_P",
	"QUOTE",
	"ESCAPE",
	"FORCE",
	"ENCODING",
	"TEQ",
	"OP",
	"ONLY",
	"RETURNING",
	"COPY",
	"ARRAY",
	"ROW",
	"SETOF",
	"INT_P",
	"INTEGER",
	"SMALLINT",
	"BIGINT",
	"REAL",
	"FLOAT_P",
	"DOUBLE_P",
	"DECIMAL_P",
	"DEC",
	"NUMERIC",
	"BOOLEAN_P",
	"BIT",
	"YEAR_P",
	"MONTH_P",
	"DAY_P",
	"HOUR_P",
	"MINUTE_P",
	"SECOND_P",
	"CHARACTER",
	"CHAR_P",
	"VARCHAR",
	"NATIONAL",
	"NCHAR",
	"PRECISION",
	"VARYING",
	"TIMESTAMP",
	"TIME",
	"INTERVAL",
	"WITHOUT",
	"ZONE",
	"IS",
	"NOT",
	"NULL",
	"DISTINCT",
	"DEFAULT",
	"NORMALIZED",
	"NOTNULL",
	"DOCUMENT_P",
	"ASYMMETRIC",
	"ASC",
	"DESC",
	"NULLS_LA",
	"FIRST_P",
	"LAST_P",
	"TO",
	"STDOUT",
	"LATERAL_P",
	"ORDINALITY",
	"WITH_LA",
	"COLLATE",
	"AS",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"BETWEEN",
	"IN_P",
	"LIKE",
	"ILIKE",
	"SIMILAR",
	"NOT_LA",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"CUBE",
	"ROLLUP",
	"Op",
	"OPERATOR",
	"AT",
	"UMINUS",
	"TYPECAST",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line lyx/gram.y:2474

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 166,
	59, 192,
	-2, 347,
	-1, 249,
	59, 192,
	-2, 347,
	-1, 292,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	95, 0,
	-2, 236,
	-1, 293,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	95, 0,
	-2, 237,
	-1, 294,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	95, 0,
	-2, 238,
	-1, 295,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	95, 0,
	-2, 239,
	-1, 296,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	95, 0,
	-2, 240,
	-1, 297,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	95, 0,
	-2, 241,
	-1, 356,
	59, 347,
	-2, 95,
	-1, 479,
	67, 0,
	133, 0,
	139, 0,
	-2, 254,
	-1, 555,
	67, 0,
	133, 0,
	139, 0,
	-2, 255,
	-1, 556,
	157, 0,
	-2, 256,
	-1, 563,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	95, 0,
	-2, 274,
	-1, 564,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	95, 0,
	-2, 275,
	-1, 565,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	95, 0,
	-2, 276,
	-1, 566,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	95, 0,
	-2, 277,
	-1, 567,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	95, 0,
	-2, 278,
	-1, 568,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	95, 0,
	-2, 279,
	-1, 579,
	80, 418,
	-2, 466,
}

const yyPrivate = 57344

const yyLast = 1600

var yyAct = [...]int{

	162, 57, 351, 430, 664, 238, 619, 630, 315, 59,
	232, 613, 622, 529, 517, 425, 576, 505, 384, 528,
	241, 524, 431, 579, 423, 164, 373, 333, 353, 50,
	52, 54, 56, 133, 134, 135, 136, 507, 141, 213,
	363, 352, 186, 447, 341, 375, 144, 250, 17, 251,
	389, 245, 175, 143, 243, 242, 177, 20, 178, 201,
	179, 19, 18, 194, 221, 189, 190, 191, 192, 169,
	665, 154, 51, 193, 194, 200, 623, 202, 205, 203,
	201, 189, 190, 191, 192, 196, 199, 195, 198, 193,
	194, 201, 191, 192, 356, 614, 362, 386, 193, 194,
	387, 457, 466, 383, 465, 249, 197, 201, 428, 678,
	679, 580, 189, 190, 191, 192, 201, 385, 495, 464,
	193, 194, 200, 463, 433, 205, 662, 309, 189, 190,
	191, 192, 196, 199, 195, 198, 193, 194, 201, 188,
	182, 183, 184, 390, 204, 551, 550, 472, 471, 671,
	206, 379, 207, 197, 201, 374, 210, 211, 212, 246,
	188, 539, 214, 461, 394, 395, 543, 374, 207, 222,
	222, 188, 386, 222, 669, 386, 364, 540, 541, 374,
	577, 170, 503, 235, 655, 176, 233, 188, 222, 581,
	508, 204, 385, 629, 144, 385, 188, 206, 286, 287,
	288, 289, 290, 291, 292, 293, 294, 295, 296, 297,
	298, 299, 300, 248, 146, 207, 173, 670, 188, 318,
	350, 486, 228, 526, 220, 224, 222, 443, 322, 223,
	442, 231, 404, 301, 188, 230, 229, 226, 429, 237,
	686, 225, 354, 174, 355, 233, 332, 222, 338, 244,
	304, 303, 326, 218, 535, 582, 313, 316, 43, 37,
	39, 38, 40, 626, 600, 397, 599, 360, 22, 537,
	248, 349, 248, 344, 346, 345, 347, 458, 459, 200,
	410, 328, 399, 398, 411, 189, 190, 191, 192, 196,
	199, 195, 198, 193, 194, 388, 685, 216, 359, 357,
	674, 302, 365, 305, 632, 307, 593, 306, 625, 446,
	197, 201, 534, 380, 381, 382, 483, 484, 367, 606,
	409, 607, 485, 486, 691, 410, 418, 605, 673, 615,
	424, 432, 392, 393, 602, 400, 396, 402, 554, 401,
	222, 552, 593, 222, 598, 41, 593, 410, 594, 547,
	510, 549, 509, 451, 499, 453, 500, 451, 355, 434,
	441, 435, 410, 444, 412, 248, 548, 538, 248, 456,
	414, 343, 207, 416, 368, 369, 370, 371, 372, 374,
	408, 356, 436, 413, 481, 482, 483, 484, 445, 449,
	450, 188, 485, 486, 344, 346, 345, 347, 331, 455,
	648, 531, 516, 498, 474, 467, 460, 187, 340, 454,
	391, 376, 479, 378, 330, 325, 468, 236, 219, 496,
	645, 646, 647, 649, 650, 651, 652, 653, 654, 506,
	342, 504, 217, 510, 187, 452, 637, 513, 434, 578,
	339, 520, 521, 222, 222, 476, 477, 222, 501, 311,
	426, 634, 585, 530, 334, 530, 437, 343, 515, 51,
	327, 51, 512, 522, 523, 502, 439, 527, 248, 248,
	588, 511, 248, 636, 532, 185, 589, 440, 408, 408,
	344, 346, 345, 347, 337, 533, 519, 555, 676, 556,
	658, 542, 544, 545, 340, 448, 168, 3, 415, 569,
	572, 239, 478, 335, 424, 55, 53, 571, 574, 403,
	171, 432, 575, 37, 553, 525, 342, 223, 51, 586,
	49, 158, 166, 405, 421, 358, 573, 222, 37, 39,
	38, 40, 530, 583, 591, 584, 310, 181, 683, 682,
	233, 595, 681, 680, 672, 590, 643, 592, 601, 546,
	536, 597, 248, 408, 408, 408, 408, 408, 408, 408,
	408, 408, 408, 408, 408, 475, 139, 140, 603, 137,
	138, 604, 473, 470, 469, 462, 153, 319, 611, 609,
	172, 506, 618, 159, 661, 638, 633, 147, 148, 321,
	617, 608, 42, 514, 530, 612, 610, 156, 620, 157,
	161, 160, 616, 215, 308, 167, 1, 621, 675, 624,
	44, 45, 46, 47, 48, 627, 657, 155, 165, 635,
	587, 405, 405, 628, 518, 438, 336, 259, 253, 254,
	377, 255, 271, 233, 641, 272, 642, 656, 659, 493,
	494, 256, 273, 274, 660, 280, 620, 257, 663, 258,
	366, 149, 348, 666, 150, 422, 667, 668, 420, 419,
	677, 644, 58, 631, 329, 324, 497, 570, 323, 417,
	432, 163, 432, 684, 152, 687, 142, 688, 689, 21,
	151, 247, 227, 14, 13, 12, 11, 432, 10, 16,
	690, 15, 6, 5, 4, 9, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 8, 7,
	427, 361, 320, 240, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 60, 61, 82, 83,
	90, 91, 180, 71, 89, 62, 63, 64, 65, 66,
	67, 68, 70, 69, 72, 73, 74, 75, 76, 77,
	84, 85, 86, 95, 2, 158, 166, 0, 0, 87,
	88, 99, 98, 92, 93, 94, 97, 96, 0, 118,
	78, 79, 80, 81, 110, 108, 109, 111, 0, 103,
	102, 100, 101, 0, 0, 105, 127, 480, 0, 0,
	122, 117, 113, 0, 112, 116, 125, 126, 123, 124,
	114, 115, 0, 0, 0, 121, 120, 0, 0, 0,
	153, 0, 0, 0, 0, 0, 0, 159, 128, 104,
	107, 406, 407, 0, 0, 129, 132, 0, 0, 0,
	130, 131, 492, 0, 161, 160, 0, 0, 481, 482,
	483, 484, 488, 491, 487, 490, 485, 486, 0, 0,
	0, 155, 165, 0, 0, 119, 0, 0, 0, 0,
	0, 0, 0, 489, 0, 0, 0, 0, 0, 234,
	596, 82, 83, 90, 91, 106, 71, 89, 62, 63,
	64, 65, 66, 67, 68, 70, 69, 72, 73, 74,
	75, 76, 77, 84, 85, 86, 95, 0, 0, 0,
	0, 0, 87, 88, 99, 98, 92, 93, 94, 97,
	96, 0, 118, 78, 79, 80, 81, 110, 108, 109,
	111, 0, 103, 102, 100, 101, 0, 0, 105, 127,
	0, 0, 0, 122, 117, 113, 0, 112, 116, 125,
	126, 123, 124, 114, 115, 0, 0, 0, 121, 120,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 128, 104, 107, 0, 0, 0, 0, 129, 132,
	0, 0, 0, 130, 131, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 119, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 82, 83, 90, 91, 106, 71,
	89, 62, 63, 64, 65, 66, 67, 68, 70, 69,
	72, 73, 74, 75, 76, 77, 84, 85, 86, 95,
	0, 0, 0, 0, 0, 87, 88, 99, 98, 92,
	93, 94, 97, 96, 0, 118, 78, 79, 80, 81,
	110, 108, 109, 111, 0, 103, 102, 100, 101, 0,
	0, 105, 127, 202, 0, 203, 122, 117, 113, 0,
	112, 116, 125, 126, 123, 124, 114, 115, 0, 0,
	0, 121, 120, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 128, 104, 107, 0, 0, 0,
	0, 129, 132, 0, 0, 0, 130, 131, 200, 0,
	0, 205, 202, 0, 189, 190, 191, 192, 196, 199,
	195, 198, 193, 194, 0, 0, 0, 0, 0, 0,
	0, 119, 0, 0, 0, 0, 0, 0, 209, 197,
	201, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 106, 202, 0, 203, 0, 0, 200, 0, 0,
	205, 0, 0, 189, 190, 191, 192, 196, 199, 195,
	198, 193, 194, 0, 0, 0, 0, 204, 0, 0,
	0, 0, 202, 206, 203, 0, 639, 640, 197, 201,
	0, 0, 0, 0, 0, 0, 0, 200, 0, 0,
	205, 207, 0, 189, 190, 191, 192, 196, 199, 195,
	198, 193, 194, 0, 0, 0, 0, 0, 0, 0,
	188, 0, 202, 312, 203, 0, 204, 200, 197, 201,
	205, 0, 206, 189, 190, 191, 192, 196, 199, 195,
	198, 193, 194, 0, 0, 0, 278, 0, 0, 0,
	207, 0, 0, 0, 0, 0, 0, 0, 197, 201,
	0, 0, 0, 0, 0, 0, 204, 200, 0, 188,
	205, 0, 206, 189, 190, 191, 192, 196, 199, 195,
	198, 193, 194, 278, 0, 0, 208, 0, 0, 0,
	207, 0, 0, 0, 0, 0, 204, 0, 197, 201,
	0, 0, 206, 0, 0, 0, 0, 0, 0, 188,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	207, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 0, 0, 188,
	0, 0, 206, 252, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 279, 158, 166, 158, 166,
	207, 0, 281, 282, 283, 284, 285, 0, 0, 275,
	276, 277, 0, 0, 0, 0, 0, 158, 166, 188,
	0, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 279, 0, 0, 0, 158, 166, 0, 281,
	282, 283, 284, 285, 0, 0, 275, 276, 277, 0,
	0, 153, 317, 153, 0, 0, 314, 0, 159, 0,
	159, 0, 147, 148, 147, 148, 0, 0, 0, 0,
	0, 0, 153, 0, 0, 161, 160, 161, 160, 159,
	0, 0, 0, 147, 148, 145, 0, 0, 0, 0,
	0, 153, 155, 165, 155, 165, 161, 160, 159, 0,
	0, 0, 147, 148, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 155, 165, 161, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 149, 0, 149, 150,
	0, 150, 155, 165, 0, 0, 35, 36, 0, 0,
	0, 0, 0, 37, 39, 38, 40, 149, 0, 0,
	150, 0, 22, 26, 29, 23, 24, 25, 30, 31,
	32, 0, 0, 0, 0, 0, 149, 34, 33, 150,
	0, 0, 0, 0, 0, 0, 0, 0, 27, 28,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 41,
}
var yyPact = [...]int{

	1500, -1000, 195, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 195, 195, 195,
	195, 195, 246, -1000, -1000, -1000, 513, 456, 454, 513,
	722, 722, 722, 722, 722, 558, 722, 1383, 465, 84,
	493, 157, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	722, -1000, 90, 513, -1000, -1000, 722, -1000, 722, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 532, 722, 722,
	722, -1000, 417, -1000, 1143, -1000, -1000, 1402, 1402, 1402,
	-1000, -1000, -1000, 1402, -1000, 236, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 373, 188, 359, 512, 512,
	-1000, 84, 512, 515, -1000, -1000, 1008, 88, -1000, -1000,
	358, -1000, -1000, -1000, -1000, 1383, 483, 100, 1251, 1402,
	1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402,
	1402, 1402, 1402, 1402, 167, -1000, -1000, -14, 531, -1000,
	20, 20, 11, 391, 1173, -1000, 1364, 1362, 512, 517,
	356, -1000, 187, -1000, 412, 512, 355, 338, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1008, 449, -1000, 442, 1402,
	382, 361, 67, 89, 520, -1000, 100, -55, -1000, -1000,
	-1000, 76, 1288, -1000, -1000, -1000, -1000, -1000, 259, 352,
	-1000, -1000, -1000, -1000, -1000, 354, 25, 352, 352, 352,
	-1000, -1000, -1000, -1000, -1000, 44, 41, -1000, -1000, 16,
	351, 16, 16, -1000, 43, 16, 20, 20, -16, -16,
	-16, -37, -5, -5, -5, -5, -5, -5, 1213, 11,
	1103, -1000, 199, -1000, -1000, 492, -1000, -1000, 751, -1000,
	-1000, 1402, -1000, 222, -1000, 1213, 304, -1000, -1000, -1000,
	323, 310, 1213, 478, 500, 512, 519, 513, 394, 91,
	512, -23, -1000, 301, 1251, 403, 420, 434, 1213, 100,
	161, 158, 100, 240, 463, 463, 463, -1000, -1000, -1000,
	513, -1000, -1000, -1000, 376, 350, -1000, 89, -1000, 309,
	361, -1000, -49, 216, 217, 63, -1000, 571, -24, -1000,
	-28, -43, -45, -1000, 346, -1000, 1402, -1000, 570, -1000,
	-1000, -1000, -1000, 569, -1000, 19, 18, 568, -1000, 345,
	-1000, 561, -1000, -1000, 16, 16, -1000, -1000, -1000, -1000,
	485, -1000, -1000, 1402, 768, -1000, 751, 751, -1000, 58,
	1402, -1000, -1000, -1000, -1000, 344, -1000, 296, -1000, -1000,
	-1000, -1000, 390, -1000, 87, 483, 513, 109, -1000, -1000,
	292, -1000, -1000, 109, 449, 722, 406, 343, 445, 722,
	722, 361, 100, 100, 447, 154, 100, -1000, -1000, -1000,
	-1000, -1000, 512, 342, 512, -1000, 67, -1000, 250, 546,
	216, 208, 307, 45, 59, 47, 35, 545, 289, 306,
	291, 14, 13, 281, 1402, 278, -1000, -1000, 1402, 215,
	1402, 751, 751, 751, 751, 751, 751, 751, 751, 751,
	751, 751, 751, 244, 244, -1000, 1213, 722, 1402, 512,
	-1000, 513, 483, 1402, 82, -1000, 381, 107, -1000, -1000,
	512, 107, 380, -1000, -1000, 399, 513, 425, -1000, 433,
	-1000, -1000, -1000, 447, -1000, 1402, 100, -1000, 288, -1000,
	865, 512, 284, -1000, -1000, 204, 202, 544, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 274, -1000, -1000, -34,
	-1000, -1000, -34, 267, -1000, 215, 42, 244, 244, 142,
	142, 142, -1000, 314, 314, 314, 314, 314, 314, -1000,
	261, 1213, -1000, -1000, 82, 1213, -1000, 722, 513, 394,
	-1000, -1000, -1000, -1000, -56, -1000, 269, 445, 722, 1402,
	-1000, 1213, -1000, 512, -1000, -76, -76, 248, -1000, -1000,
	-1000, 201, -1000, -1000, -1000, -1000, 1402, -1000, -1000, -1000,
	-1000, -56, 113, 245, -1000, 396, 429, -1000, 378, -1000,
	1054, -1000, -1000, 1008, -1000, -1000, -1000, 1213, 245, 542,
	-1000, 334, 99, -1000, 513, 451, 722, 1402, -18, -1000,
	-1000, -1000, 483, -1000, -1000, -1000, -1000, -83, -83, -1000,
	-1000, -83, -83, 83, 540, 268, 241, 448, 722, -1000,
	-1000, -1000, -36, -1000, 539, -1000, 538, 535, 534, 224,
	174, 512, -1000, -1000, 513, -1000, 722, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 375, -1000, 512, 375, 264, -1000,
	375, -1000,
}
var yyPgo = [...]int{

	0, 754, 497, 2, 10, 732, 37, 5, 42, 713,
	20, 55, 51, 712, 711, 710, 710, 41, 8, 214,
	232, 9, 709, 48, 62, 61, 57, 708, 695, 694,
	693, 692, 691, 689, 688, 686, 685, 684, 683, 592,
	682, 12, 25, 54, 681, 680, 679, 53, 679, 676,
	674, 671, 39, 0, 669, 668, 667, 666, 665, 3,
	664, 664, 664, 663, 662, 22, 662, 662, 661, 7,
	659, 658, 658, 64, 15, 17, 655, 27, 69, 652,
	28, 1, 24, 652, 13, 19, 652, 26, 650, 18,
	649, 647, 50, 645, 643, 642, 642, 641, 635, 632,
	632, 631, 630, 629, 45, 628, 628, 49, 40, 47,
	627, 626, 625, 624, 620, 619, 616, 608, 606, 605,
	71, 604, 603, 599, 597, 593, 586, 585, 584, 14,
	582, 6, 43, 44, 21, 582, 16, 582, 580, 580,
	4, 11, 23, 578,
}
var yyR1 = [...]int{

	0, 118, 39, 39, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 64, 64, 64, 81, 81,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 4, 5, 83,
	83, 83, 83, 83, 83, 83, 83, 83, 83, 109,
	109, 109, 109, 109, 109, 108, 108, 108, 107, 107,
	107, 107, 107, 107, 107, 106, 106, 106, 106, 110,
	105, 104, 104, 103, 103, 103, 103, 103, 103, 103,
	103, 103, 103, 103, 102, 102, 101, 101, 100, 100,
	99, 98, 97, 97, 96, 96, 95, 94, 93, 93,
	93, 93, 93, 93, 92, 92, 91, 91, 91, 91,
	90, 89, 89, 89, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 88, 88, 87, 87,
	41, 41, 119, 86, 86, 85, 85, 84, 84, 42,
	42, 42, 13, 16, 16, 45, 45, 45, 45, 120,
	52, 52, 121, 121, 122, 122, 123, 123, 124, 19,
	19, 19, 19, 19, 19, 19, 18, 18, 18, 18,
	18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
	18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
	18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
	18, 18, 51, 50, 50, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 7, 7, 48, 48, 49, 49, 47, 47, 47,
	47, 27, 27, 27, 27, 29, 30, 31, 22, 28,
	2, 2, 2, 2, 2, 2, 125, 125, 126, 126,
	77, 77, 77, 32, 32, 32, 32, 33, 34, 35,
	36, 38, 37, 127, 127, 127, 128, 128, 128, 129,
	129, 113, 130, 130, 131, 111, 111, 112, 112, 114,
	114, 115, 115, 116, 116, 117, 117, 53, 71, 70,
	72, 73, 73, 8, 8, 9, 9, 11, 80, 80,
	79, 79, 44, 14, 14, 17, 17, 17, 17, 17,
	43, 10, 10, 10, 10, 10, 132, 132, 133, 133,
	133, 133, 134, 12, 12, 12, 12, 12, 12, 23,
	23, 54, 54, 135, 135, 55, 60, 60, 65, 59,
	59, 58, 58, 56, 56, 57, 136, 136, 24, 24,
	78, 78, 76, 76, 82, 25, 75, 75, 74, 74,
	26, 137, 137, 137, 137, 138, 138, 61, 61, 66,
	139, 139, 139, 139, 62, 62, 67, 69, 69, 63,
	63, 140, 140, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 15, 15, 6, 6,
	141, 141, 142, 142, 142, 143, 143, 40, 40, 40,
	40, 46, 46,
}
var yyR2 = [...]int{

	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	3, 5, 6, 2, 3, 3, 4, 0, 1, 1,
	1, 1, 1, 2, 4, 1, 1, 1, 1, 1,
	2, 3, 0, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 3, 0, 1, 1, 1, 1,
	5, 2, 1, 1, 1, 1, 4, 1, 2, 2,
	1, 3, 3, 2, 1, 0, 5, 2, 5, 2,
	1, 3, 3, 0, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 0, 1, 4,
	2, 0, 1, 1, 0, 1, 3, 3, 3, 3,
	4, 4, 1, 1, 3, 1, 1, 1, 1, 1,
	1, 3, 1, 0, 3, 2, 4, 3, 5, 1,
	1, 3, 1, 2, 1, 1, 1, 3, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 3, 2, 4, 2,
	3, 4, 3, 4, 5, 6, 6, 3, 4, 3,
	4, 1, 3, 1, 1, 1, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 0, 2, 1, 0, 1, 3, 3, 2, 1,
	1, 4, 5, 2, 2, 1, 1, 1, 3, 3,
	2, 2, 2, 2, 2, 2, 0, 2, 0, 5,
	3, 6, 3, 7, 3, 3, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 0, 2, 2, 0, 1,
	0, 3, 1, 3, 3, 0, 3, 0, 2, 0,
	2, 0, 2, 0, 2, 0, 2, 1, 1, 1,
	1, 1, 3, 2, 0, 1, 3, 1, 2, 1,
	0, 1, 1, 2, 0, 1, 4, 5, 4, 0,
	2, 2, 2, 3, 1, 4, 1, 0, 2, 2,
	2, 1, 2, 3, 4, 5, 4, 5, 4, 12,
	2, 1, 3, 0, 1, 3, 3, 0, 1, 1,
	3, 0, 1, 1, 3, 3, 0, 2, 7, 5,
	0, 1, 1, 3, 3, 8, 1, 3, 0, 2,
	7, 1, 1, 1, 1, 1, 0, 1, 3, 2,
	1, 1, 3, 0, 1, 3, 1, 1, 3, 2,
	0, 1, 0, 1, 1, 3, 3, 1, 1, 3,
	3, 3, 3, 4, 3, 2, 1, 1, 1, 0,
	1, 0, 1, 1, 1, 3, 0, 1, 1, 1,
	1, 11, 9,
}
var yyChk = [...]int{

	-1000, -118, -1, -2, -29, -30, -31, -22, -27, -28,
	-34, -35, -36, -37, -38, -32, -33, -23, -24, -25,
	-26, -46, 22, 25, 26, 27, 23, 48, 49, 24,
	28, 29, 30, 38, 37, 6, 7, 13, 15, 14,
	16, 99, -39, 63, -39, -39, -39, -39, -39, -2,
	-3, 5, -3, 50, -3, 51, -3, -81, -64, -21,
	4, 5, 13, 14, 15, 16, 17, 18, 19, 21,
	20, 11, 22, 23, 24, 25, 26, 27, 48, 49,
	50, 51, 6, 7, 28, 29, 30, 37, 38, 12,
	8, 9, 41, 42, 43, 31, 45, 44, 40, 39,
	59, 60, 58, 57, 97, 63, 153, 98, 53, 54,
	52, 55, 72, 70, 78, 79, 73, 69, 47, 133,
	84, 83, 68, 76, 77, 74, 75, 64, 96, 103,
	108, 109, 104, -81, -81, -81, -81, 11, 12, 8,
	9, -81, -49, -47, -18, 72, -19, 70, 71, 134,
	137, -45, -50, 59, -120, 100, -124, -123, 4, 66,
	84, 83, -53, -51, -42, 101, 5, -119, 31, -78,
	97, 17, -138, 59, 86, -81, 95, -3, -81, -81,
	-5, 5, -81, -81, -81, 58, -8, 17, 176, 70,
	71, 72, 73, 78, 79, 76, 74, 95, 77, 75,
	64, 96, 19, 21, 133, 67, 139, 157, 153, 5,
	-18, -18, -18, -52, -18, -122, 61, 59, 65, 59,
	-11, -73, -53, 5, -11, -78, -73, -40, -23, -24,
	-25, -26, -4, -21, 4, 95, 59, -47, -7, 18,
	-9, -10, -11, -43, 149, -12, 59, -44, -42, 5,
	-109, -107, 102, -105, -103, -101, -97, -91, -90, -110,
	103, 104, 105, 106, 107, 108, 109, 110, 111, 112,
	113, -99, -98, -95, -94, 128, 129, 130, 5, 114,
	-93, 121, 122, 123, 124, 125, -18, -18, -18, -18,
	-18, -18, -18, -18, -18, -18, -18, -18, -18, -18,
	-18, 66, 134, 84, 83, 136, 140, 138, -121, 141,
	5, 58, 60, -52, 62, -18, -52, 60, -53, 60,
	-13, 72, -18, -55, -58, 59, 65, 48, -11, -60,
	59, 60, -4, -77, 5, 54, -111, 42, -18, 58,
	47, -133, 69, 10, 33, 35, 34, 36, -79, -80,
	153, -3, -17, -80, 153, -53, 5, -43, 5, -12,
	-10, -14, 151, -108, 100, -107, -88, 59, 115, 116,
	117, 118, 119, -87, 120, -104, 59, -102, 59, 126,
	-104, -104, -104, 59, -89, 151, 131, 59, -89, -92,
	127, 59, -92, -92, 121, 122, -92, 66, 84, 83,
	136, 140, 138, 17, -20, -19, 70, 71, -120, -18,
	58, 62, 60, 60, 60, 20, -23, -54, -53, -70,
	-71, 5, -76, -82, -3, -74, 56, -15, 17, 147,
	-59, -65, -53, 147, 58, 60, -109, 53, -112, 46,
	43, -10, 69, 69, -10, -133, 69, -132, 32, -132,
	-132, -3, 59, -53, 59, -17, 60, 150, 61, 61,
	-108, 100, 4, 147, 147, 147, 147, 59, -52, 4,
	4, 129, 129, 4, 59, 4, -92, -92, 17, -18,
	19, 70, 71, 72, 73, 78, 79, 76, 74, 95,
	77, 75, 64, -20, -20, 60, -18, -57, 59, 58,
	60, 58, -8, 95, -7, -75, -3, -6, 81, 60,
	58, -6, -77, -81, -125, 52, 59, -129, -113, 41,
	-81, -81, -10, -10, -134, 68, 69, -10, -85, -84,
	-53, 59, -85, -80, 62, 4, 4, 61, 60, 116,
	118, 119, -87, 119, -87, -87, 4, 60, 60, 60,
	132, 132, 60, -52, 60, -18, -18, -20, -20, -20,
	-20, -20, -20, -20, -20, -20, -20, -20, -20, -81,
	-56, -18, -53, -82, -7, -18, -136, 98, 58, -142,
	4, 82, 148, -65, -142, 53, -3, -114, 45, 43,
	-134, -18, -10, 58, 60, -4, 5, -85, 60, 62,
	62, 4, 60, -89, -89, 60, 58, 60, -136, -81,
	-75, -143, -74, -141, 151, 60, -129, -81, -130, -131,
	-18, -84, -41, 152, -41, 60, 62, -18, -141, 80,
	-69, -63, 59, -126, 55, -115, 44, 58, -127, 142,
	143, -4, -69, 4, -68, 86, 87, 88, 66, 89,
	90, 91, 92, 93, 94, 85, -3, -116, 39, -81,
	-131, -128, 144, -7, -140, 153, -140, -140, -140, 91,
	134, 66, 4, 60, 59, -117, 40, -81, 145, 146,
	4, 4, 4, 4, -59, 72, 66, -59, -3, -81,
	-59, 60,
}
var yyDef = [...]int{

	80, -2, 2, 81, 82, 83, 84, 85, 86, 87,
	88, 89, 90, 91, 92, 93, 94, 2, 2, 2,
	2, 2, 0, 295, 296, 297, 0, 0, 0, 0,
	78, 78, 78, 78, 78, 0, 78, 0, 0, 410,
	0, 426, 1, 3, 300, 301, 302, 303, 304, 305,
	78, 95, 0, 0, 293, 294, 78, 318, 78, 75,
	76, 77, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 319, 320, 322, 321, 0, 78, 78,
	78, 317, 354, 285, 289, 290, 226, 0, 0, 0,
	261, 219, 220, 0, 222, 0, 224, 225, 205, 206,
	207, 208, 263, 264, 209, 0, -2, 0, 0, 0,
	411, 410, 0, 0, 425, 298, 0, 0, 299, 79,
	0, 98, 314, 315, 316, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 249, 213, 0, 288,
	228, 229, 245, 0, 210, 223, 0, 0, 0, 0,
	401, 357, 351, 347, 0, 0, 397, 0, 467, 468,
	469, 470, 291, 96, 97, 0, 0, 286, 335, 0,
	353, 355, 360, 369, 0, 374, 0, 364, 362, -2,
	227, 117, 0, 118, 119, 120, 121, 122, 187, 132,
	133, 134, 135, 136, 137, 145, 0, 132, 132, 132,
	143, 146, 147, 152, 153, 173, 173, 170, 129, 165,
	157, 165, 165, 160, 0, 165, 230, 231, 232, 233,
	234, 235, -2, -2, -2, -2, -2, -2, 242, 243,
	244, 246, 0, 250, 252, 0, 257, 259, 0, 212,
	287, 0, 221, 0, 215, 210, 0, 217, 262, 199,
	0, 0, 202, 402, 0, 0, 0, 0, 418, 0,
	0, 0, 292, 0, 0, 0, 337, 0, 282, 0,
	0, 0, 0, 0, 377, 377, 377, 381, 371, 361,
	0, 359, 372, 365, 0, 0, -2, 369, 192, 374,
	0, 370, 0, 109, 113, 117, 123, 0, 174, 175,
	176, 177, 178, 179, 188, 130, 0, 138, 0, 139,
	140, 141, 142, 0, 167, 0, 0, 0, 169, 151,
	164, 0, 158, 159, 165, 165, 163, 248, 251, 253,
	0, 258, 260, 0, 0, 265, 0, 0, 222, 211,
	0, 214, 216, 200, 201, 0, 409, 0, 391, 352,
	349, 348, 354, 412, 0, 281, 0, 459, 456, 457,
	0, 399, 398, 459, 0, 78, 306, 0, 330, 78,
	78, 356, 0, 0, 0, 0, 0, 378, 376, 379,
	380, 358, 0, 0, 0, 373, 383, 363, 0, 0,
	110, 114, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 161, 162, 0, -2,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 267, 218, 211, 78, 0, 0,
	395, 0, 281, 0, 406, 419, 416, 0, 458, 396,
	0, 0, 312, 313, 310, 0, 0, 339, 329, 0,
	338, 336, 384, 0, 386, 0, 0, 388, 0, 195,
	0, 0, 0, 375, 115, 0, 0, 0, 124, 180,
	181, 182, 183, 184, 185, 186, 0, 131, 144, 173,
	171, 172, 173, 0, 156, -2, -2, 268, 269, 270,
	271, 272, 273, -2, -2, -2, -2, -2, -2, 408,
	0, 403, 392, 413, 406, 414, 420, 78, 0, -2,
	462, 463, 464, 400, 461, 307, 0, 330, 78, 0,
	385, 382, 387, 0, 366, 191, 191, 0, 368, 116,
	111, 0, 189, 166, 168, 150, 0, 405, 415, 407,
	417, 461, 0, 440, 460, 308, 341, 340, 331, 332,
	325, 196, 197, 0, 198, 367, 112, 404, 440, 0,
	472, 437, 0, 311, 0, 343, 78, 0, 328, 323,
	324, 190, 281, 465, 439, 443, 444, 442, 442, 447,
	448, 442, 442, 0, 0, 0, 0, 345, 78, 342,
	333, 334, 0, 471, 0, 441, 0, 0, 0, 0,
	0, 0, 455, 438, 0, 389, 78, 344, 326, 327,
	445, 446, 449, 450, 451, 452, 0, 454, 0, 346,
	453, 309,
}
var yyTok1 = [...]int{

	1,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:374
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:375
		{

		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:381
		{
			yyVAL.str = yyDollar[1].str
		}
	case 5:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:382
		{
			yyVAL.str = yyDollar[1].str
		}
	case 6:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:383
		{
			yyVAL.str = yyDollar[1].str
		}
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:384
		{
			yyVAL.str = yyDollar[1].str
		}
	case 8:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:385
		{
			yyVAL.str = yyDollar[1].str
		}
	case 9:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:386
		{
			yyVAL.str = yyDollar[1].str
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:387
		{
			yyVAL.str = yyDollar[1].str
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:388
		{
			yyVAL.str = yyDollar[1].str
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:389
		{
			yyVAL.str = yyDollar[1].str
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:390
		{
			yyVAL.str = yyDollar[1].str
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:391
		{
			yyVAL.str = yyDollar[1].str
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:392
		{
			yyVAL.str = yyDollar[1].str
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:393
		{
			yyVAL.str = yyDollar[1].str
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:394
		{
			yyVAL.str = yyDollar[1].str
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:395
		{
			yyVAL.str = yyDollar[1].str
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:396
		{
			yyVAL.str = yyDollar[1].str
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:397
		{
			yyVAL.str = yyDollar[1].str
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:398
		{
			yyVAL.str = yyDollar[1].str
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:399
		{
			yyVAL.str = yyDollar[1].str
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:400
		{
			yyVAL.str = yyDollar[1].str
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:401
		{
			yyVAL.str = yyDollar[1].str
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:402
		{
			yyVAL.str = yyDollar[1].str
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:403
		{
			yyVAL.str = yyDollar[1].str
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:404
		{
			yyVAL.str = yyDollar[1].str
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:405
		{
			yyVAL.str = yyDollar[1].str
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:406
		{
			yyVAL.str = yyDollar[1].str
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:407
		{
			yyVAL.str = yyDollar[1].str
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:408
		{
			yyVAL.str = yyDollar[1].str
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:409
		{
			yyVAL.str = yyDollar[1].str
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:410
		{
			yyVAL.str = yyDollar[1].str
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:411
		{
			yyVAL.str = yyDollar[1].str
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:412
		{
			yyVAL.str = yyDollar[1].str
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:413
		{
			yyVAL.str = yyDollar[1].str
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:414
		{
			yyVAL.str = yyDollar[1].str
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:415
		{
			yyVAL.str = yyDollar[1].str
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:416
		{
			yyVAL.str = yyDollar[1].str
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:417
		{
			yyVAL.str = yyDollar[1].str
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:418
		{
			yyVAL.str = yyDollar[1].str
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:419
		{
			yyVAL.str = yyDollar[1].str
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:420
		{
			yyVAL.str = yyDollar[1].str
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:421
		{
			yyVAL.str = yyDollar[1].str
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:422
		{
			yyVAL.str = yyDollar[1].str
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:423
		{
			yyVAL.str = yyDollar[1].str
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:424
		{
			yyVAL.str = yyDollar[1].str
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:425
		{
			yyVAL.str = yyDollar[1].str
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:426
		{
			yyVAL.str = yyDollar[1].str
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:427
		{
			yyVAL.str = yyDollar[1].str
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:428
		{
			yyVAL.str = yyDollar[1].str
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:429
		{
			yyVAL.str = yyDollar[1].str
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:430
		{
			yyVAL.str = yyDollar[1].str
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:431
		{
			yyVAL.str = yyDollar[1].str
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:432
		{
			yyVAL.str = yyDollar[1].str
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:433
		{
			yyVAL.str = yyDollar[1].str
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:434
		{
			yyVAL.str = yyDollar[1].str
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:435
		{
			yyVAL.str = yyDollar[1].str
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:436
		{
			yyVAL.str = yyDollar[1].str
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:437
		{
			yyVAL.str = yyDollar[1].str
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:438
		{
			yyVAL.str = yyDollar[1].str
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:439
		{
			yyVAL.str = yyDollar[1].str
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:440
		{
			yyVAL.str = yyDollar[1].str
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:441
		{
			yyVAL.str = yyDollar[1].str
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:442
		{
			yyVAL.str = yyDollar[1].str
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:443
		{
			yyVAL.str = yyDollar[1].str
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:444
		{
			yyVAL.str = yyDollar[1].str
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:445
		{
			yyVAL.str = yyDollar[1].str
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:446
		{
			yyVAL.str = yyDollar[1].str
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:447
		{
			yyVAL.str = yyDollar[1].str
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:448
		{
			yyVAL.str = yyDollar[1].str
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:449
		{
			yyVAL.str = yyDollar[1].str
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:450
		{
			yyVAL.str = yyDollar[1].str
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:451
		{
			yyVAL.str = yyDollar[1].str
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:454
		{
			yyVAL.str = yyDollar[1].str
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:454
		{
			yyVAL.str = yyDollar[1].str
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:454
		{
			yyVAL.str = yyDollar[1].str
		}
	case 78:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:458
		{
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:459
		{
		}
	case 80:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:465
		{
			yyVAL.node = nil
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:467
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:469
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:471
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:473
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:475
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:477
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:479
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:481
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:483
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:485
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:487
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:489
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:491
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:493
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:499
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:504
		{
			yyVAL.str = yyDollar[1].str
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:508
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:514
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:519
		{
			yyVAL.str = yyDollar[1].str
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:521
		{
			yyVAL.str = "AND"
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:523
		{
			yyVAL.str = "OR"
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:525
		{
			yyVAL.str = "!="
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:527
		{
			yyVAL.str = "="
		}
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:529
		{
			yyVAL.str = "<"
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:531
		{
			yyVAL.str = ">"
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:533
		{
			yyVAL.str = ">="
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:535
		{
			yyVAL.str = "<="
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:537
		{
			yyVAL.str = yyDollar[1].str
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:553
		{
			yyVAL.str = yyDollar[1].str
		}
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:557
		{
			yyVAL.str = yyDollar[2].str
		}
	case 111:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:562
		{
			yyVAL.str = yyDollar[1].str
		}
	case 112:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lyx/gram.y:566
		{
			yyVAL.str = yyDollar[2].str
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:570
		{

			yyVAL.str = yyDollar[1].str
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:575
		{
			yyVAL.str = yyDollar[2].str
		}
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:583
		{
		}
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:585
		{
		}
	case 117:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:587
		{
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:591
		{
			yyVAL.str = yyDollar[1].str
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:593
		{
			yyVAL.str = yyDollar[1].str
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:595
		{
			yyVAL.str = yyDollar[1].str
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:597
		{
			yyVAL.str = yyDollar[1].str
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:599
		{
			yyVAL.str = yyDollar[1].str
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:602
		{

		}
	case 124:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:606
		{

		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:622
		{
			yyVAL.str = yyDollar[1].str
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:623
		{
			yyVAL.str = yyDollar[1].str
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:624
		{
			yyVAL.str = yyDollar[1].str
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:625
		{
			yyVAL.str = yyDollar[1].str
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:629
		{
			yyVAL.str = yyDollar[1].str
		}
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:642
		{

			yyVAL.str = yyDollar[1].str
		}
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:651
		{
		}
	case 132:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:652
		{
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:659
		{

			yyVAL.str = yyDollar[1].str
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:664
		{
			yyVAL.str = yyDollar[1].str
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:668
		{
			yyVAL.str = yyDollar[1].str
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:672
		{
			yyVAL.str = yyDollar[1].str
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:676
		{
			yyVAL.str = yyDollar[1].str
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:680
		{
			yyVAL.str = yyDollar[1].str
		}
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:684
		{
			yyVAL.str = yyDollar[1].str
		}
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:688
		{
			yyVAL.str = yyDollar[1].str
		}
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:692
		{
			yyVAL.str = yyDollar[1].str
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:696
		{
			yyVAL.str = yyDollar[1].str
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:700
		{
			yyVAL.str = yyDollar[1].str
		}
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:706
		{
			/*
			 * Check FLOAT() precision limits assuming IEEE floating
			 * types - thomas 1997-09-18
			 */

		}
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:714
		{
		}
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:723
		{
		}
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:726
		{
		}
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:733
		{
		}
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:736
		{
		}
	case 150:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:742
		{

		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:749
		{
			/* bit defaults to bit(1), varbit to no limit */

		}
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:760
		{
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:763
		{
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:768
		{
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:771
		{
			/* Length was not specified so allow to be unrestricted.
			 * This handles problems with fixed-length (bpchar) strings
			 * which in column definitions must default to a length
			 * of one, but should not be constrained if the length
			 * was not specified.
			 */

		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:784
		{

		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:790
		{
			/* char defaults to char(1), varchar to no limit */

		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:798
		{
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:800
		{
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:802
		{
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:804
		{
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:806
		{
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:808
		{
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:812
		{
		}
	case 165:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:813
		{
		}
	case 166:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:822
		{

		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:826
		{

		}
	case 168:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:830
		{

		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:834
		{

		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:842
		{

		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:848
		{
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:849
		{
		}
	case 173:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:850
		{
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:855
		{
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:857
		{
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:859
		{
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:861
		{
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:863
		{
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:865
		{
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:867
		{

		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:871
		{

		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:875
		{

		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:879
		{

		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:883
		{

		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:887
		{

		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:891
		{

		}
	case 187:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:895
		{
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:900
		{
		}
	case 189:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:903
		{
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:935
		{

		}
	case 191:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:938
		{
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:946
		{
			yyVAL.strlist = yyDollar[1].strlist
		}
	case 194:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:947
		{
			yyVAL.strlist = nil
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:952
		{
			yyVAL.strlist = []string{yyDollar[1].str}
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:956
		{
			yyVAL.strlist = append(yyDollar[1].strlist, yyDollar[3].str)
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:962
		{
			yyVAL.str = yyDollar[1].str
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:966
		{
			yyVAL.str = yyDollar[1].str
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:974
		{
			yyVAL.node = nil
		}
	case 200:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:977
		{
			yyVAL.node = nil
		}
	case 201:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:981
		{
			yyVAL.node = nil
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:985
		{
			yyVAL.node = nil
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:990
		{
			yyVAL.nodeList = []Node{yyDollar[1].node}
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:994
		{
			yyVAL.nodeList = append(yyDollar[1].nodeList, yyDollar[3].node)
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1002
		{
			yyVAL.node = &AExprConst{
				Value: yyDollar[1].str,
			}
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1006
		{
			yyVAL.node = &AExprConst{
				Value: yyDollar[1].str,
			}
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1010
		{
			yyVAL.node = &AExprConst{
				Value: yyDollar[1].str,
			}
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1014
		{
			yyVAL.node = &AExprConst{
				Value: yyDollar[1].str,
			}
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1023
		{
			yyVAL.nodeList = []Node{yyDollar[1].node}
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1027
		{
			yyVAL.nodeList = append(yyDollar[1].nodeList, yyDollar[3].node)
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1037
		{

		}
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1045
		{

		}
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1050
		{
		}
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1051
		{
		}
	case 218:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:1055
		{
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1059
		{
			yyVAL.node = yyDollar[1].node
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1062
		{
			yyVAL.node = yyDollar[1].node
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1065
		{
			yyVAL.node = yyDollar[2].node
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1068
		{
		}
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1070
		{
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1072
		{
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1073
		{
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1076
		{
			yyVAL.node = yyDollar[1].node
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1078
		{
		}
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1106
		{
			yyVAL.node = yyDollar[2].node
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1108
		{
			yyVAL.node = yyDollar[2].node
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1110
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1118
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1126
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1134
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1142
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1150
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1158
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1166
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1174
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1182
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1190
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1198
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1207
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1220
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1228
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1236
		{
			yyVAL.node = yyDollar[2].node
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1346
		{
			yyVAL.node = yyDollar[1].node
		}
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1348
		{
			yyVAL.node = yyDollar[1].node
		}
	case 248:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1350
		{
			yyVAL.node = yyDollar[1].node
		}
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1352
		{
			yyVAL.node = yyDollar[1].node
		}
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1371
		{
			yyVAL.node = yyDollar[1].node
		}
	case 251:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1373
		{
			yyVAL.node = yyDollar[1].node
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1375
		{
			yyVAL.node = yyDollar[1].node
		}
	case 253:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1377
		{
			yyVAL.node = yyDollar[1].node
		}
	case 254:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:1397
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[5].node,
				Op:    yyDollar[3].str,
			}
		}
	case 255:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lyx/gram.y:1405
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[6].node,
				Op:    yyDollar[3].str,
			}
		}
	case 256:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lyx/gram.y:1413
		{
			yyVAL.node = &AExprOp{
				Left: yyDollar[1].node,
				Right: &AExprList{
					List: []Node{
						yyDollar[4].node,
						yyDollar[6].node,
					},
				},
				Op: "BETWEEN",
			}
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1529
		{
			yyVAL.node = yyDollar[1].node
		}
	case 258:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1531
		{
			yyVAL.node = yyDollar[1].node
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1533
		{
			yyVAL.node = yyDollar[1].node
		}
	case 260:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1537
		{
			yyVAL.node = yyDollar[1].node
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1547
		{
			/*
			 * The SQL spec only allows DEFAULT in "contextually typed
			 * expressions", but for us, it's easier to allow it in
			 * any a_expr and then throw error during parse analysis
			 * if it's in an inappropriate context.  This way also
			 * lets us say something smarter than "syntax error".
			 */

		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1561
		{
			yyVAL.node = &ColumnRef{
				ColName:    yyDollar[3].str,
				TableAlias: yyDollar[1].str,
			}
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1569
		{
			yyVAL.node = &ColumnRef{
				ColName: yyDollar[1].str,
			}
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1573
		{
			yyVAL.node = yyDollar[1].node
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1581
		{
			yyVAL.node = yyDollar[1].node
		}
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1583
		{
			yyVAL.node = yyDollar[2].node
		}
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1585
		{
			yyVAL.node = yyDollar[2].node
		}
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1587
		{ /* result not matter */
		}
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1589
		{ /* result not matter */
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1591
		{ /* result not matter */
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1593
		{ /* result not matter */
		}
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1595
		{ /* result not matter */
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1597
		{ /* result not matter */
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1599
		{ /* result not matter */
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1601
		{ /* result not matter */
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1603
		{ /* result not matter */
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1605
		{ /* result not matter */
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1607
		{ /* result not matter */
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1609
		{ /* result not matter */
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1610
		{ /* result not matter */
		}
	case 281:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1615
		{
			yyVAL.node = &AExprEmpty{}
		}
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1619
		{
			yyVAL.node = yyDollar[2].node
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1624
		{
			yyVAL.nodeList = yyDollar[1].nodeList
		}
	case 284:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1625
		{
			yyVAL.nodeList = nil
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1629
		{
			yyVAL.nodeList = []Node{yyDollar[1].node}
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1630
		{
			yyVAL.nodeList = append(yyDollar[1].nodeList, yyDollar[3].node)
		}
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1634
		{
			yyVAL.node = yyDollar[1].node
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1638
		{
			yyVAL.node = yyDollar[1].node
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1642
		{
			yyVAL.node = yyDollar[1].node
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1646
		{
			yyVAL.node = &AExprEmpty{}
		}
	case 291:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1653
		{
			yyVAL.node = &VarSet{
				Name:  yyDollar[2].str,
				Value: yyDollar[4].str,
			}
		}
	case 292:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:1659
		{
			yyVAL.node = &VarSet{
				IsLocal: true,
				Name:    yyDollar[3].str,
				Value:   yyDollar[5].str,
			}
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1666
		{
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1667
		{
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1672
		{
			yyVAL.node = &Begin{}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1681
		{
			yyVAL.node = &Commit{}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1690
		{
			yyVAL.node = &Rollback{}
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1698
		{
			yyVAL.node = &Execute{
				Id: yyDollar[2].str,
			}
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1706
		{
			yyVAL.node = &Execute{
				Id: yyDollar[2].str,
			}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1713
		{
			yyVAL.node = yyDollar[1].node
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1715
		{
			yyVAL.node = yyDollar[1].node
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1717
		{
			yyVAL.node = yyDollar[1].node
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1719
		{
			yyVAL.node = yyDollar[1].node
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1721
		{
			yyVAL.node = yyDollar[1].node
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1723
		{
			yyVAL.node = &Explain{
				Stmt: yyDollar[2].node,
			}
		}
	case 306:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1730
		{
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1731
		{
		}
	case 308:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1734
		{
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:1735
		{
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1738
		{
			yyVAL.tableelt = []TableElt{{
				ColName: yyDollar[1].str,
				ColType: yyDollar[2].str,
			},
			}
		}
	case 311:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lyx/gram.y:1745
		{
			yyVAL.tableelt = nil
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1748
		{
			yyVAL.tableelt = append(yyDollar[1].tableelt, yyDollar[3].tableelt...)
		}
	case 313:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lyx/gram.y:1753
		{
			yyVAL.node = &CreateTable{
				TableName: yyDollar[3].str,
				TableElts: yyDollar[5].tableelt,
			}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1758
		{
			yyVAL.node = &Index{}
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1762
		{
			yyVAL.node = &CreateRole{}
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1766
		{
			yyVAL.node = &CreateDatabase{}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1773
		{
			yyVAL.node = &Alter{}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1780
		{
			yyVAL.node = &Vacuum{}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1787
		{
			yyVAL.node = &Cluster{}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1795
		{
			yyVAL.node = &Analyze{}
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1802
		{
			yyVAL.node = &Drop{}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1810
		{
			yyVAL.node = &Truncate{}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1818
		{
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1819
		{
		}
	case 325:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1820
		{
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1824
		{
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1825
		{
		}
	case 328:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1826
		{
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1832
		{
		}
	case 330:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1833
		{
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1837
		{
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1841
		{
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1842
		{
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1851
		{
			/* no operator */
		}
	case 335:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1858
		{
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1858
		{
		}
	case 337:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1859
		{
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1859
		{
		}
	case 339:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1860
		{
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1860
		{
		}
	case 341:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1861
		{
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1861
		{
		}
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1862
		{
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1862
		{
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1863
		{
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1863
		{
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1868
		{
			yyVAL.str = yyDollar[1].str
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1877
		{
			yyVAL.str = yyDollar[1].str
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1884
		{
			yyVAL.str = yyDollar[1].str
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1886
		{
			yyVAL.str = yyDollar[1].str
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1925
		{
			yyVAL.from = &RangeVar{
				SchemaName:   "",
				RelationName: yyDollar[1].str,
				Alias:        "",
			}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1933
		{
			yyVAL.from = &RangeVar{
				SchemaName:   yyDollar[1].str,
				RelationName: yyDollar[3].str,
				Alias:        "",
			}
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1948
		{
			yyVAL.from_list = yyDollar[2].from_list
		}
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1949
		{
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1953
		{
			yyVAL.from_list = []FromClauseNode{yyDollar[1].from}
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1954
		{
			yyVAL.from_list = append(yyDollar[1].from_list, yyDollar[3].from)
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1959
		{
			/* inheritance query, implicitly */
			yyVAL.tableref = yyDollar[1].from
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1970
		{
			yyVAL.str = yyDollar[2].str
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1974
		{
			yyVAL.str = yyDollar[1].str
		}
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1980
		{
			yyVAL.str = ""
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1991
		{
			yyVAL.node = yyDollar[1].node
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1996
		{
			yyVAL.bool = true
		}
	case 364:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1997
		{
			yyVAL.bool = false
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2008
		{
			yyVAL.node = nil
		}
	case 366:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:2012
		{
			yyVAL.node = nil
		}
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:2016
		{

		}
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:2020
		{

		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2024
		{
			yyVAL.node = nil
		}
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2042
		{
			yyVAL.node = yyDollar[1].node
		}
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2050
		{
			yyDollar[1].tableref.SetAlias(yyDollar[2].str)
			yyVAL.from = yyDollar[1].tableref
		}
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2055
		{

		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2059
		{

		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2063
		{
			yyVAL.from = yyDollar[1].tableref
		}
	case 375:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:2067
		{
			yyDollar[2].tableref.SetAlias(yyDollar[4].str)
			yyVAL.from = yyDollar[2].tableref
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2075
		{
		}
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2076
		{
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2080
		{
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2081
		{
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2082
		{
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2083
		{
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2094
		{

		}
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2102
		{
			yyVAL.tableref = yyDollar[2].tableref
		}
	case 384:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:2106
		{
			/* CROSS JOIN is same as unqualified inner join */
			yyVAL.tableref = &JoinExpr{
				Larg: yyDollar[1].from,
				Rarg: yyDollar[4].from,
			}
		}
	case 385:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:2114
		{
			yyVAL.tableref = &JoinExpr{
				Larg: yyDollar[1].from,
				Rarg: yyDollar[4].from,
			}
		}
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:2121
		{
			/* letting join_type reduce to empty doesn't work */
			yyVAL.tableref = &JoinExpr{
				Larg: yyDollar[1].from,
				Rarg: yyDollar[3].from,
			}
		}
	case 387:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:2129
		{
			yyVAL.tableref = &JoinExpr{
				Larg: yyDollar[1].from,
				Rarg: yyDollar[5].from,
			}
		}
	case 388:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:2136
		{
			/* letting join_type reduce to empty doesn't work */
			yyVAL.tableref = &JoinExpr{
				Larg: yyDollar[1].from,
				Rarg: yyDollar[4].from,
			}
		}
	case 389:
		yyDollar = yyS[yypt-12 : yypt+1]
//line lyx/gram.y:2151
		{
			yyVAL.node = &Select{
				FromClause: yyDollar[3].from_list,
				Where:      yyDollar[4].node,
				TargetList: yyDollar[2].nodeList,
			}
		}
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2157
		{
			yyVAL.node = &Select{
				TargetList: yyDollar[2].nodeList,
			}
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2165
		{
			yyVAL.strlist = []string{yyDollar[1].str}
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2166
		{
			yyVAL.strlist = append(yyDollar[1].strlist, yyDollar[3].str)
		}
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2171
		{
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2171
		{
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2174
		{
			yyVAL.strlist = yyDollar[2].strlist
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2180
		{
			yyVAL.strlist = yyDollar[2].strlist
		}
	case 397:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2181
		{
			yyVAL.strlist = nil
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2186
		{
			yyVAL.str = yyDollar[1].str
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2192
		{
			yyVAL.strlist = []string{yyDollar[1].str}
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2193
		{
			yyVAL.strlist = append(yyDollar[1].strlist, yyDollar[3].str)
		}
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2198
		{
			yyVAL.strlist = nil
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2201
		{
			yyVAL.strlist = yyDollar[1].strlist
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2209
		{
			yyVAL.nodeList = []Node{yyDollar[1].node}
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2211
		{
			yyVAL.nodeList = append(yyDollar[1].nodeList, yyDollar[3].node)
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2216
		{
			yyVAL.nodeList = yyDollar[2].nodeList
		}
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2222
		{
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2223
		{
		}
	case 408:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lyx/gram.y:2229
		{
			yyVAL.node = &Insert{
				TableRef: yyDollar[3].tableref,
				Columns:  yyDollar[4].strlist,
				Values:   yyDollar[6].nodeList,
			}
		}
	case 409:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:2235
		{
			yyVAL.node = &Insert{
				TableRef:  yyDollar[3].tableref,
				Columns:   yyDollar[4].strlist,
				SubSelect: yyDollar[5].node,
			}
		}
	case 410:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2244
		{
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2245
		{
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2251
		{
			yyVAL.strlist = []string{yyDollar[1].str}
		}
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2252
		{
			yyVAL.strlist = append(yyDollar[1].strlist, yyDollar[3].str)
		}
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2257
		{
			yyVAL.str = yyDollar[1].str
		}
	case 415:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lyx/gram.y:2267
		{
			yyVAL.node = &Update{
				TableRef: yyDollar[3].tableref,
				Where:    yyDollar[7].node,
			}
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2278
		{
			yyVAL.strlist = []string{yyDollar[1].str}
		}
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2279
		{
			yyVAL.strlist = append(yyDollar[3].strlist, yyDollar[1].str)
		}
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2284
		{
		}
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2285
		{
		}
	case 420:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lyx/gram.y:2289
		{
			yyVAL.node = &Delete{
				TableRef: yyDollar[4].tableref,
				Where:    yyDollar[6].node,
			}
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2298
		{
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2299
		{
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2300
		{
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2306
		{
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2311
		{
		}
	case 426:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2313
		{
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2319
		{
			yyVAL.strlist = []string{yyDollar[1].str}
		}
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2323
		{
			yyVAL.strlist = append(yyDollar[1].strlist, yyDollar[3].str)
		}
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2330
		{

		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2336
		{
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2338
		{
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2339
		{
		}
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2340
		{
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2345
		{
			yyVAL.strlist = []string{yyDollar[1].str}
		}
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2349
		{
			yyVAL.strlist = append(yyDollar[1].strlist, yyDollar[3].str)
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2356
		{
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2360
		{
			yyVAL.strlist = yyDollar[1].strlist
		}
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2361
		{
			yyVAL.strlist = yyDollar[2].strlist
		}
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2366
		{
			yyVAL.strlist = append(yyDollar[1].strlist, yyDollar[2].str)
		}
	case 440:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2367
		{
			yyVAL.strlist = nil
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2376
		{
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2379
		{
		}
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2382
		{
		}
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2385
		{
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2388
		{
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2391
		{
		}
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2394
		{
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2397
		{
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2400
		{
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2403
		{
		}
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:2406
		{
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2409
		{
		}
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2412
		{
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2418
		{
			yyVAL.bool = true
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2419
		{
			yyVAL.bool = false
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2423
		{
			yyVAL.bool = true
		}
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2424
		{
			yyVAL.bool = false
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2432
		{
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2433
		{
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2434
		{
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2440
		{
		}
	case 466:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2442
		{
		}
	case 471:
		yyDollar = yyS[yypt-11 : yypt+1]
//line lyx/gram.y:2457
		{
			yyVAL.node = &Copy{
				TableRef: yyDollar[3].from,
				Where:    yyDollar[11].node,
				IsFrom:   yyDollar[5].bool,
			}
		}
	case 472:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lyx/gram.y:2465
		{
			yyVAL.node = &Copy{
				IsFrom:  false,
				SubStmt: yyDollar[3].node,
			}
		}
	}
	goto yystack /* stack new state and value */
}
